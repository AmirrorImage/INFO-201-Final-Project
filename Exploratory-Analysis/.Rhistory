library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
View(data)
# Exercise 1: working with data frames (review)
# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
View("vehicles")
View("vehicles")
View("vehicles")
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View('vehicles')
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View('fueleconomy')
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
manufacturers <- select(make)
manufacturers <- select(id, make)
manufacturers <- select(id, make)
manufacturers <- select(vehicles, id, make)
View(manufacturers)
View(manufacturers)
unique(manufacturers)
manufacturers <- select(vehicles, make)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(manufacturers)
filter(vehicles, year = 1997)
filter(vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
vehicles1 <- arrange(vehicles, hwy )
View(vehicles1)
View(vehicles1)
# Arrange the 1997 cars by highway (`hwy`) gas milage
vehicles1 <- arrange(vehicles, -hwy )
View(vehicles1)
filter1 <- mutate(
filter1,
average = ( hwy + cty) /2
)
filter1 <- filter(vehicles, year == 1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
vehicles1 <- arrange(vehicles, -hwy )
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
filter1 <- mutate(
filter1,
average = ( hwy + cty) /2
)
View(filter1)
filter2 <- (vehicles, drive == 2-Wheel Drive,  cty >= 20)
filter2 <- (vehicles, drive == "2-Wheel Drive", cty >= 20)
filter2 <- (vehicles, drive == "2-Wheel Drive", cty >= 20)
filter2 <- filter(vehicles, drive == "2-Wheel Drive", cty >= 20)
View(filter2)
worst_vehicle <- filter(filter2, hwy == min(hwy))
worst_vehicle <- select(worst-vehicle, hwy)
worst_vehicle <- select(worst_vehicle, hwy)
View(worst_vehicle)
year_choice <- filter(vehicles, year, hwy == max(hwy))
year_choice <- select(vehicles, year, hwy)
View(year_choice)
